{
    "version": "0.1",
    "pageContent": 
	{
        "_comments": "object that contains data for page labels, buttons, etc.",
        "navItems": 
		{
            "_common": 
			{
                "buttonBackToGallery": 
				{
                    "name": "Back To Gallery",
					"method": "backToGallery()",
					"idName": "backToGallery"	
                },
                "buttonStartTutorial": 
				{
                    "name": "Start Tutorial",
					"method": "startTutorialFromDetailsScreen()",
					"idName": "startTutorial"
                },
				"buttonViewDetails": 
				{
                    "name": "View Details",
					"method": "viewDetails()",
					"idName": "stepsViewDetails"	
                }
            }
        }
    },
    "tutorial": 
	{
        "_common": 
		{
            "name": "Getting started - Creating a Simple Unit Test",
            "shortDescription": "Learn how IBM App Connect Enterprise unit tests help you with rapid Test Driven Development by creating and executing a simple Java Unit Test.",
            "durationText": "This tutorial takes approximately",
            "durationTime": "10 minutes",
            "_resourceToOpenComment": "The ID of the first resource to open when the user imports the tutorial. Resource IDs are defined in the repo_metadata.json Tutorials listing on ot4i.",
            "resourceToOpen": "MyMessageFlow",
            "helpLink": 
			{
                "text": "IBM Knowledge Center",
           		"link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.ace.home.doc/help_home.htm"
            }
        },
        "pageDetails": 
		{
            "topicsName": "Tutorial Topics",
            "_topicListComment": "A short list of product concepts or tasks demonstrated by this tutorial",
            "topicList": 
			[
                {
                    "title": "Java Unit Testing"
                },
                {
                    "title": "Test Projects"
                }				
            ],
            "outcomesName": "Learning outcomes",
            "_outcomesComment": "A description of what the user will have learned or accomplished by running this tutorial.",
            "outcomeList": 
			[
                {
                    "title": "Use IBM App Connect Enterprise to create a test case for a Mapping node in a message flow."
                }
            ],
            "summary": 
			{
                "overviewName": "OVERVIEW",
                "_overviewComment": "A short description of what happens in this tutorial, and an optional short explanation of the ACE concepts used in this tutorial if necessary for context. What background knowledge must the user have for this to make sense?",
                "sections": 
				[
                    {
                        "section": "This tutorial uses a simple message flow in an application that receives an XML input message over HTTP, and converts the data into JSON using a Mapping node. The output JSON data is returned to the requesting client using an HTTPReply node. An example input message is provided."
                    },
                    {
                        "section": "The tutorial provides the user with the message flow already constructed and describes the step-by-step instructions for writing and executing a unit test for the flow. The new test is created in a Test Project (a new project type added for the first time in IBM App Connect Enterprise 12) using the New Java Unit Test wizard. Once created the unit test is executed inside an independent integration server which is configured as part of the tutorial."
					},
                    {
                        "section": "In IBM App Connect Enterprise, a Test Project (which has a reference to the application under test) is a container for all the resources that are required to run unit tests. There are no other pre-requisites needed by the scenario."
                    }
                ]
            },
			"helpLinks": 
			{
				"_helpLinksComment": "Helplinks that have a type:web attribute are rendered as web links. Otherwise, links are assumed to be to embedded Help topics in the Knowledge Center.",
				"title": "Find out more",
				"details": 
				[
					{
						"title": "Knowledge Center link to ",
						"description": "Developing unit tests using Test Projects",
						"link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/bi12002_.htm",
						"type": "web"
					}
				]
			}
        },
        "pageSteps": 
		{
            "create": 
			{
                "overview": 
				{
                    "name": "Create",
                    "heading": "Import a project",
                    "_createComment": "A description of what will happen when the user clicks Import.",
                    "sections": 
					[
                        {
                            "section": "Click <span class='uicontrol'>Import</span> to add the required project to your workspace:"
						},
						{
							"section": "The application named <span class='application'>MyApplication</span> will be imported into your workspace."
						},
						{
							"section": "<span class='application'>MyApplication</span> provides a single message flow named <span class='resource'>MyMessageFlow</span> which receives data over HTTP."													
						},
						{
							"section": "The HTTPInput node is configured to expect an XML message which conforms to <span class='resource'>MyModel.xsd</span> although the HTTPInput node itself is not set up to validate the message immediately. The next node in the flow is a graphical mapping node which transforms the message into a JSON output. The HTTPReply node at the end of the flow returns the JSON to the requester."
						},
						{
							"section":"Now move to the Prepare section where we describe how to create a unit test for the flow we have just imported."
						 }
					 ]
				 },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Developing integration solutions by using applications",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/bi12002_.htm",
							"type": "web"
                        }
                    ]
                },
                "actions": 
				{
                    "title": "Create Actions",
                    "details": 
					[
                        {
                            "name": "Import",
                            "method": "importArtifacts()"
                        }
                    ]
                }
            },
            "prepare": 
			{
                "overview": 
				{
                    "name": "Prepare",
                    "heading": "",
                    "_prepareComment": "A description of what just happened when the user clicked Import, and what will happen when the user clicks Deploy.",
                    "sections": 
		     [				 
				  {
                "section":"<b>Create a unit test for the mapping node in the message flow</b>",
                "steps":{
                  "type":"ordered",
                  "details":[
                    {
                      "details":"From the Integration Explorer view in the bottom left corner of the Toolkit, right-click the Integration Servers folder and select the option to <span class='uicontrol'>Create a local integration server</span>. Leave all the options with their default values and click Finish. The local Integration Server will be started, using a project in your Toolkit's workspace as the work directory. Click OK to dismiss the Success dialog."
                    }
				  ]
				}
				  },
					
				 {
                "section":"<b>Testing using the Flow Exerciser</b>",
                "steps":{
                  "type":"ordered",
                  "details":[
                    {
                      "details":"The imported message flow <span class='application'>MyMessageFlow</span> should still be open. At the top of the flow canvas, click the Flow Exerciser icon <img src='https://ot4i.github.io/iib-tutorials/images/icons/iib/startFlowExerciser.png' alt='' />. If prompted (which you will be if your Toolkit has known connections to more than one server), select the <span class='application'>TEST_SERVER</span> integration server that you just created and agree to the confirmation dialog which warns that the message flow is owned by an Application. After a few seconds another confirmation dialog will appear with a Ready to record message status. Read through the information on the dialog and click Close."
                    },
                    {
                      "details":"Back at the top of the flow, click on the Send Message icon <img src='https://ot4i.github.io/iib-tutorials/images/icons/iib/sendMessage.png' alt='' /> and when the dialog opens, select the provided input message:<br><code>&lt;Message&gt;&lt;Child&gt;hello world&lt;/Child&gt;&lt;/Message&gt;</code><br>Click Send to push the data into the flow."
                    },
                    {
                      "details":"You should receive a reply message from the flow. The XML will have been transformed into a JSON message and the data will have been converted to upper case:<br><code>{\"Output\": \"HELLO WORLD\"}</code>. Click close on the testing dialog"
                    }
                  ]
                }
              },
			  {
              "section":"<b>Creating the Test Case</b>",				
                "steps":
                {
                "type":"ordered",
                "details":
                  [                    					
					{ 
                      "details":"With the flow still showing in recording mode, right-click the node in the message flow named <span class='application'>Mapping</span> and choose the menu option to <span class='application'>Create Test Case</span>. The Create test case wizard will launch. Note that the Node location fields will already have been populated with the name of the Application, Flow, Node, Input terminal and Output terminal."
					},
					{ 
                      "details":"In the section labelled <span class='application'>Generated input file for constructing an input message assembly to invoke the node</span>, you will see that the recorded input message will be used when the test is generated. If you had more than one recorded message you could choose which one to use."
                    },					
					{ 
                      "details":"In the section labelled <span class='application'>Generated output file to compare against the actual output message</span>, you will see that the recorded output message will be used when the test is generated."
                    },
					{ 
                      "details":"In the section labelled <span class='application'>Select matchers to be included in the generated test</span>, options are ticked for <span class='application'>Assert node call count</span> and <span class='application'>Assert terminal propagate count</span>.In the section labelled <span class='application'>Select message trees to compare in the generated test</span>, the <span class='application'>Message body</span> will have been selected. You can scroll through the preview pane to see what the generated unit test will look like. The preview is updated when you change the selected options on the left, but for this tutorial leave everything as the defaults, and click the <span class='Application'>Finish</span> button to generate the test."
                    },
					{ 
                      "details":"You will find that a Test Project named <span class='application'>MyApplication_IntegrationTest</span> is generated for you. The generated java unit test is opened for you (you can also find it in <span class='application'>MyApplication_MyMessageFlow_Mapping_0001_IntegrationTest.java</span>). The project has a resources folder where your input and output data files will have been created. The generated Test Project has a project reference configured which points the Test Project at the application <span class='application'>MyApplication</span>. In the next section we will describe how to run the unit test you have just created."
                    }
                  ]
                }
              }
             ]
                },
                "helpLinks": 
				{
                }
            },
            "run": 
			{
                "overview": 
				{
                    "name": "Run",
                    "heading": "",
                    "_runComment": "The full steps for the user to run through the tutorial. Use 'sections' to render paragraphs, 'steps' with a type of 'ordered' or 'unordered' to render HTML lists, and 'substeps' to render nested lists.",
                "sections":[                            
                            {
                                "section": "<h4>Run the Unit Test",
                                "steps": {
                                    "type": "ordered",
                                    "details": [                                      
                                    	{
                                        "details": "In the <span class='Application'>Application Development</span> view (by default in the top left of the Toolkit), locate the Test Project which you just created."
                                        },											
										{
											"details": "Right click the Test Project named <span class='Application'>MyApplication_IntegrationTest</span> and choose the option  <span class='Application'>Run as &gt; Integration Server JUnit Test Runner</span>."
											},
											{
											"details": "After a few seconds, the Console view should be opened, which will show an independent integration server  being started in order to execute the unit test. There is no deployment step required - This is taken care of for you so that the application under test, and the Test Project which we just created are automatically available to the server."	
											},
											{
											"details": "The JUnit view will open in the top left corner (just to the right of the Application Development view and the Patterns Explorer) and will show that the test which was generated ran successfully and passed."
											}
                                      ]
                                  }                            
                        },			
			{
			    "section": "This tutorial has shown how to create and excute a simple Unit Test."
			}
                    ]
                },
                "helpLinks": 
				{
                    "title": "Find out more",
                    "details": 
					[                        
                        {
                            "title": "Knowledge Center link to ",
                            "description": "Unit Testing your message flow",
                            "link": "https://www.ibm.com/support/knowledgecenter/en/SSTTDS_11.0.0/com.ibm.etools.mft.doc/rt26110_.htm",
							"type": "web"
                        }
                    ]
                }
            }
        }
    }
}
